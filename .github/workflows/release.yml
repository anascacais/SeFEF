name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
  push:
    tags: # Trigger only on tagged pushes
      - "v*"

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/') # Only publish to PyPI on tag pushes
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Mandatory for trusted publishing
    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release with signatures
    if: startsWith(github.ref, 'refs/tags/') # Ensure this runs only on tagged pushes
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write # Mandatory for making GitHub Releases
      id-token: write # Mandatory for Sigstore
    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: |
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" ./dist/* --repo "${{ github.repository }}" --notes "Release ${{ github.ref_name }}"
